services:
  influxdb:
    image: influxdb:2-alpine
    restart: unless-stopped
    ports:
      - 20000:8086
    volumes:
      - ../volumes/influxdb/data:/var/lib/influxdb
    environment:
      - TZ=Asia/Shanghai
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_DB=telegraf
    labels:
      caddy.reverse_proxy: "{{upstreams 8086}}"
      homepage.name: influxdb
      homepage.description: 时序数据库。

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U root -d postgres']
      interval: 5s
      timeout: 5s
      retries: 10
      
  pgvector:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U root -d postgres']
      interval: 5m
      timeout: 5s
      retries: 10

  pgvecto-rs:
    image: tensorchord/pgvecto-rs:pg16-v0.2.1
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: '--data-checksums'
    healthcheck:
      test: pg_isready --dbname=$$POSTGRES_DB --username=$$POSTGRES_USER || exit 1; Chksum="$$(psql --dbname=$$POSTGRES_DB --username=$$POSTGRES_USER --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]

  mysql:
    image: mysql:8.2.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1
